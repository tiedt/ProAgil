{"version":3,"sources":["webpack://ngxBr/webpack/universalModuleDefinition","webpack://ngxBr/webpack/bootstrap","webpack://ngxBr/external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}","webpack://ngxBr/./src/currency-mask.directive.ts","webpack://ngxBr/external {\"root\":[\"ng\",\"forms\"],\"commonjs\":\"@angular/forms\",\"commonjs2\":\"@angular/forms\",\"amd\":\"@angular/forms\"}","webpack://ngxBr/./src/currency-mask.config.ts","webpack://ngxBr/./index.ts","webpack://ngxBr/./src/input.handler.ts","webpack://ngxBr/./src/input.service.ts","webpack://ngxBr/./src/input.manager.ts","webpack://ngxBr/./src/currency-mask.module.ts","webpack://ngxBr/external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__9__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","core_1","forms_1","currency_mask_config_1","input_handler_1","CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CurrencyMaskDirective","multi","currencyMaskConfig","elementRef","keyValueDiffers","this","options","optionsTemplate","align","allowNegative","allowZero","decimal","precision","prefix","suffix","thousands","nullable","keyValueDiffer","find","ngAfterViewInit","nativeElement","style","textAlign","ngDoCheck","diff","inputHandler","updateOptions","assign","ngOnInit","InputHandler","handleBlur","event","getOnModelTouched","apply","handleCut","isChromeAndroid","handleInput","handleKeydown","handleKeypress","handlePaste","test","navigator","userAgent","registerOnChange","callbackFunction","setOnModelChange","registerOnTouched","setOnModelTouched","setDisabledState","disabled","writeValue","setValue","__decorate","Input","HostListener","Directive","selector","providers","__param","Optional","Inject","CURRENCY_MASK_CONFIG","ElementRef","KeyValueDiffers","InjectionToken","__export","input_service_1","htmlInputElement","inputService","InputService","_this","setTimeout","updateFieldValue","onModelChange","keyCode","rawValue","charCodeAt","length","rawValueLength","rawValueSelectionEnd","inputSelection","selectionEnd","storedRawValueLength","storedRawValue","Math","abs","removeNumber","changeToPositive","changeToNegative","canInputMoreNumbers","addNumber","setCursorPosition","which","charCode","preventDefault","selectionRangeLength","selectionStart","prefixLength","clearValue","isNullable","ctrlKey","undefined","getOnModelChange","onModelTouched","target","setSelectionRange","input_manager_1","PER_AR_NUMBER","Map","inputManager","InputManager","initialize","set","applyMask","keyChar","String","fromCharCode","substring","isNumber","_a","onlyNumbers","Number","toFixed","replace","integerPart","slice","startsWith","newRawValue","decimalPart","isZero","parseInt","indexOf","clearMask","RegExp","forEach","val","re","parseFloat","charAt","move","substr","match","updateValueAndCursor","setCursorAt","position","focus","createTextRange","textRange","collapse","moveEnd","moveStart","select","oldLength","haventReachedMaxLength","maxLength","haveNumberSelected","startWithZero","range","document","selection","createRange","parentElement","lenght","normalizedValue","startRange","moveToBookmark","getBookmark","endRange","compareEndPoints","split","_storedRawValue","common_1","currency_mask_directive_1","NgxCurrencyModule","forRoot","config","ngModule","NgxCurrencyModule_1","useValue","NgModule","imports","CommonModule","FormsModule","declarations"],"mappings":";;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,iBAAAA,QAAA,kBAAAA,QAAA,oBACA,mBAAAC,eAAAC,IACAD,OAAA,qDAAAJ,GACA,iBAAAC,QACAA,QAAA,MAAAD,EAAAG,QAAA,iBAAAA,QAAA,kBAAAA,QAAA,oBAEAJ,EAAA,MAAAC,EAAAD,EAAA,QAAAA,EAAA,SAAAA,EAAA,WARA,CASCO,OAAA,SAAAC,EAAAC,EAAAC,GACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAX,QAGA,IAAAC,EAAAQ,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAb,QAAA,IAUA,OANAc,EAAAH,GAAAI,KAAAd,EAAAD,QAAAC,IAAAD,QAAAU,GAGAT,EAAAY,GAAA,EAGAZ,EAAAD,QA0DA,OArDAU,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAlB,EAAAmB,EAAAC,GACAV,EAAAW,EAAArB,EAAAmB,IACAG,OAAAC,eAAAvB,EAAAmB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAA1B,GACA,oBAAA2B,eAAAC,aACAN,OAAAC,eAAAvB,EAAA2B,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAvB,EAAA,cAAiD6B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAApC,GACA,IAAAmB,EAAAnB,KAAA+B,WACA,WAA2B,OAAA/B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAS,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,mBClFA1C,EAAAD,QAAAM,4nBCAA,IAAAsC,EAAAlC,EAAA,GAeAmC,EAAAnC,EAAA,GACAoC,EAAApC,EAAA,GACAqC,EAAArC,EAAA,GAEaV,EAAAgD,qCAA4C,CACvDC,QAASJ,EAAAK,kBACTC,YAAaP,EAAAQ,WAAW,WAAM,OAAAC,IAC9BC,OAAO,GAOT,IAAAD,EAAA,WAmBE,SAAAA,EAA8DE,EACAC,EACAC,GAFAC,KAAAH,qBACAG,KAAAF,aACAE,KAAAD,kBAnBrDC,KAAAC,QAAuC,GAKzCD,KAAAE,gBAAkB,CACrBC,MAAO,QACPC,eAAe,EACfC,WAAW,EACXC,QAAS,IACTC,UAAW,EACXC,OAAQ,KACRC,OAAQ,GACRC,UAAW,IACXC,UAAU,GAMRd,IACAG,KAAKE,gBAAkBL,GAG3BG,KAAKY,eAAiBb,EAAgBc,KAAK,IAAIrC,SA6EnD,OA1EEmB,EAAAb,UAAAgC,gBAAA,WACEd,KAAKF,WAAWiB,cAAcC,MAAMC,UAAYjB,KAAKC,QAAUD,KAAKC,QAAQE,MAAQH,KAAKE,gBAAgBC,OAG3GR,EAAAb,UAAAoC,UAAA,WACMlB,KAAKY,eAAeO,KAAKnB,KAAKC,WAChCD,KAAKF,WAAWiB,cAAcC,MAAMC,UAAYjB,KAAKC,QAAQE,MAAQH,KAAKC,QAAQE,MAAQH,KAAKE,gBAAgBC,MAC/GH,KAAKoB,aAAaC,cAAoBzD,OAAQ0D,OAAO,GAAItB,KAAKE,gBAAiBF,KAAKC,YAIxFN,EAAAb,UAAAyC,SAAA,WACEvB,KAAKoB,aAAe,IAAI/B,EAAAmC,aAAaxB,KAAKF,WAAWiB,cAAqBnD,OAAQ0D,OAAO,GAAItB,KAAKE,gBAAiBF,KAAKC,WAI1HN,EAAAb,UAAA2C,WAAA,SAAWC,GACT1B,KAAKoB,aAAaO,oBAAoBC,MAAMF,IAI9C/B,EAAAb,UAAA+C,UAAA,SAAUH,GACH1B,KAAK8B,mBACR9B,KAAKoB,aAAaS,UAAUH,IAKhC/B,EAAAb,UAAAiD,YAAA,SAAYL,GACN1B,KAAK8B,mBACP9B,KAAKoB,aAAaW,YAAYL,IAKlC/B,EAAAb,UAAAkD,cAAA,SAAcN,GACP1B,KAAK8B,mBACR9B,KAAKoB,aAAaY,cAAcN,IAKpC/B,EAAAb,UAAAmD,eAAA,SAAeP,GACR1B,KAAK8B,mBACR9B,KAAKoB,aAAaa,eAAeP,IAKrC/B,EAAAb,UAAAoD,YAAA,SAAYR,GACL1B,KAAK8B,mBACR9B,KAAKoB,aAAac,YAAYR,IAIlC/B,EAAAb,UAAAgD,gBAAA,WACE,MAAO,UAAUK,KAAKC,UAAUC,YAAc,WAAWF,KAAKC,UAAUC,YAG1E1C,EAAAb,UAAAwD,iBAAA,SAAiBC,GACfvC,KAAKoB,aAAaoB,iBAAiBD,IAGrC5C,EAAAb,UAAA2D,kBAAA,SAAkBF,GAChBvC,KAAKoB,aAAasB,kBAAkBH,IAGtC5C,EAAAb,UAAA6D,iBAAA,SAAiBxE,GACf6B,KAAKF,WAAWiB,cAAc6B,SAAWzE,GAG3CwB,EAAAb,UAAA+D,WAAA,SAAW1E,GACT6B,KAAKoB,aAAa0B,SAAS3E,IAnGpB4E,EAAA,CAAR7D,EAAA8D,+DA2CDD,EAAA,CADC7D,EAAA+D,aAAa,OAAQ,CAAC,mIAMvBF,EAAA,CADC7D,EAAA+D,aAAa,MAAO,CAAC,kIAQtBF,EAAA,CADC7D,EAAA+D,aAAa,QAAS,CAAC,oIAQxBF,EAAA,CADC7D,EAAA+D,aAAa,UAAW,CAAC,sIAQ1BF,EAAA,CADC7D,EAAA+D,aAAa,WAAY,CAAC,uIAQ3BF,EAAA,CADC7D,EAAA+D,aAAa,QAAS,CAAC,oIA7EbtD,EAAqBoD,EAAA,CAJjC7D,EAAAgE,UAAU,CACPC,SAAU,iBACVC,UAAW,CAAC9G,EAAAgD,wCAqBD+D,EAAA,EAAAnE,EAAAoE,YAAYD,EAAA,EAAAnE,EAAAqE,OAAOnE,EAAAoE,qDAC0CtE,EAAAuE,WACKvE,EAAAwE,mBArBpE/D,GAAb,GAAarD,EAAAqD,uCC7BbpD,EAAAD,QAAAO,iFCAA,IAAAqC,EAAAlC,EAAA,GAcWV,EAAAkH,qBAAuB,IAAItE,EAAAyE,eAAmC,qKCdzEC,EAAA5G,EAAA,IACA4G,EAAA5G,EAAA,mFCDA,IAAA6G,EAAA7G,EAAA,GAEAwE,EAAA,WAMI,SAAAA,EAAYsC,EAAoC7D,GAC5CD,KAAK+D,aAAe,IAAIF,EAAAG,aAAaF,EAAkB7D,GAgJ/D,OA7IIuB,EAAA1C,UAAA+C,UAAA,SAAUH,GAAV,IAAAuC,EAAAjE,KACIkE,WAAW,WACPD,EAAKF,aAAaI,mBAClBF,EAAKnB,SAASmB,EAAKF,aAAa5F,OAChC8F,EAAKG,cAAcH,EAAKF,aAAa5F,QACtC,IAGPqD,EAAA1C,UAAAiD,YAAA,SAAYL,GACR,IAAI2C,EAAUrE,KAAK+D,aAAaO,SAASC,WAAWvE,KAAK+D,aAAaO,SAASE,OAAS,GACpFC,EAAiBzE,KAAK+D,aAAaO,SAASE,OAC5CE,EAAuB1E,KAAK+D,aAAaY,eAAeC,aACxDC,EAAuB7E,KAAK+D,aAAae,eAAeN,OAG5D,GAFAxE,KAAK+D,aAAaO,SAAWtE,KAAK+D,aAAae,eAE3CL,GAAkBC,GAA2E,GAAnDK,KAAKC,IAAIP,EAAiBI,GAAxE,CASA,GAJIJ,EAAiBI,GACjB7E,KAAK+D,aAAakB,aAAa,GAG/BR,EAAiBI,EACjB,OAAQR,GACJ,KAAK,GACDrE,KAAK+D,aAAamB,mBAClB,MACJ,KAAK,GACDlF,KAAK+D,aAAaoB,mBAClB,MACJ,QACI,IAAKnF,KAAK+D,aAAaqB,oBACnB,OAGJpF,KAAK+D,aAAasB,UAAUhB,GAIxCrE,KAAKsF,kBAAkB5D,GACvB1B,KAAKoE,cAAcpE,KAAK+D,aAAa5F,YA1BjC6B,KAAKsF,kBAAkB5D,IA6B/BF,EAAA1C,UAAAkD,cAAA,SAAcN,GACV,IAAI2C,EAAU3C,EAAM6D,OAAS7D,EAAM8D,UAAY9D,EAAM2C,QAErD,GAAe,GAAXA,GAA2B,IAAXA,GAA4B,OAAXA,EAAkB,CACnD3C,EAAM+D,iBACN,IAAIC,EAAuBX,KAAKC,IAAIhF,KAAK+D,aAAaY,eAAeC,aAAe5E,KAAK+D,aAAaY,eAAegB,gBAEzF,GAAxBD,IACA1F,KAAK+D,aAAakB,aAAaZ,GAC/BrE,KAAKoE,cAAcpE,KAAK+D,aAAa5F,QAGrCuH,GAAyB1F,KAAK+D,aAAaO,SAASE,OAASxE,KAAK+D,aAAa6B,gBAC/E5F,KAAK6F,eAKjBrE,EAAA1C,UAAA+G,WAAA,WACI7F,KAAK8C,SAAS9C,KAAK+D,aAAa+B,aAAe,KAAO,GACtD9F,KAAKoE,cAAcpE,KAAK+D,aAAa5F,QAGzCqD,EAAA1C,UAAAmD,eAAA,SAAeP,GACX,IAAI2C,EAAU3C,EAAM6D,OAAS7D,EAAM8D,UAAY9D,EAAM2C,QAErD,GAAgB,KAAZA,IAAkB3C,EAAMqE,QAA5B,CAIA,OAAQ1B,GACJ,UAAK2B,EACL,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,OACJ,KAAK,GACDhG,KAAK+D,aAAamB,mBAClB,MACJ,KAAK,GACDlF,KAAK+D,aAAaoB,mBAClB,MACJ,QACI,GAAInF,KAAK+D,aAAaqB,oBACSL,KAAKC,IAAIhF,KAAK+D,aAAaY,eAAeC,aAAe5E,KAAK+D,aAAaY,eAAegB,iBAEzF3F,KAAK+D,aAAaO,SAASE,QACnDxE,KAAK8C,SAAS,GAGlB9C,KAAK+D,aAAasB,UAAUhB,GAIxC3C,EAAM+D,iBACNzF,KAAKoE,cAAcpE,KAAK+D,aAAa5F,SAGzCqD,EAAA1C,UAAAoD,YAAA,SAAYR,GAAZ,IAAAuC,EAAAjE,KACIkE,WAAW,WACPD,EAAKF,aAAaI,mBAClBF,EAAKnB,SAASmB,EAAKF,aAAa5F,OAChC8F,EAAKG,cAAcH,EAAKF,aAAa5F,QACtC,IAGPqD,EAAA1C,UAAAuC,cAAA,SAAcpB,GACVD,KAAK+D,aAAa1C,cAAcpB,IAGpCuB,EAAA1C,UAAAmH,iBAAA,WACI,OAAOjG,KAAKoE,eAGhB5C,EAAA1C,UAAA0D,iBAAA,SAAiBD,GACbvC,KAAKoE,cAAgB7B,GAGzBf,EAAA1C,UAAA6C,kBAAA,WACI,OAAO3B,KAAKkG,gBAGhB1E,EAAA1C,UAAA4D,kBAAA,SAAkBH,GACdvC,KAAKkG,eAAiB3D,GAG1Bf,EAAA1C,UAAAgE,SAAA,SAAS3E,GACL6B,KAAK+D,aAAa5F,MAAQA,GAGtBqD,EAAA1C,UAAAwG,kBAAR,SAA0B5D,GACtBwC,WAAW,WACPxC,EAAMyE,OAAOC,kBAAkB1E,EAAMyE,OAAOhI,MAAMqG,OAAQ9C,EAAMyE,OAAOhI,MAAMqG,SAC9E,IAEXhD,EAvJA,GAAalF,EAAAkF,8FCFb,IAAA6E,EAAArJ,EAAA,GAIAgH,EAAA,WA6BI,SAAAA,EAAoBF,EAA+B7D,GAA/BD,KAAA8D,mBAA+B9D,KAAAC,UA5BnDD,KAAAsG,cAAqC,IAAIC,IA6BrCvG,KAAKwG,aAAe,IAAIH,EAAAI,aAAa3C,GACrC9D,KAAK0G,aAmKb,OA/LI1C,EAAAlF,UAAA4H,WAAA,WACI1G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KAEjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,KACjC3G,KAAKsG,cAAcK,IAAI,IAAU,MAUrC3C,EAAAlF,UAAAuG,UAAA,SAAUhB,GACDrE,KAAKsE,WACNtE,KAAKsE,SAAWtE,KAAK4G,WAAU,EAAO,MAG1C,IAAIC,EAAUC,OAAOC,aAAa1C,GAC9BsB,EAAiB3F,KAAK2E,eAAegB,eACrCf,EAAe5E,KAAK2E,eAAeC,aACvC5E,KAAKsE,SAAWtE,KAAKsE,SAAS0C,UAAU,EAAGrB,GAAkBkB,EAAU7G,KAAKsE,SAAS0C,UAAUpC,EAAc5E,KAAKsE,SAASE,QAC3HxE,KAAKmE,iBAAiBwB,EAAiB,IAG3C3B,EAAAlF,UAAA8H,UAAA,SAAUK,EAAmB3C,GACrB,IAAA4C,EAAAlH,KAAAC,QAACG,EAAA8G,EAAA9G,cAAeE,EAAA4G,EAAA5G,QAASC,EAAA2G,EAAA3G,UAAWC,EAAA0G,EAAA1G,OAAQC,EAAAyG,EAAAzG,OAAQC,EAAAwG,EAAAxG,UAEpDyG,GAF+DD,EAAAvG,UACnE2D,EAAW2C,EAAW,IAAIG,OAAO9C,GAAU+C,QAAQ9G,GAAa+D,GACrCgD,QAAQ,oCAAqC,KAExE,IAAKH,EACD,MAAO,GAGX,IAAII,EAAcJ,EAAYK,MAAM,EAAGL,EAAY3C,OAASjE,GACzD+G,QAAQ,YAAa,IACrBA,QAAQ,YAAa,IACrBA,QAAQ,OAAQ,IAChBA,QAAQ,kFAAmF5G,GAE1FA,GAAa6G,EAAYE,WAAW/G,KACpC6G,EAAcA,EAAYP,UAAU,IAIrB,IAAfO,IACAA,EAAc,KAGlB,IAAIG,EAAcH,EACdI,EAAcR,EAAYK,MAAML,EAAY3C,OAASjE,GAErDA,EAAY,IACZmH,GAAepH,EAAUqH,GAG7B,IAAIC,EAAkC,GAAzBC,SAASN,KAA+C,GAAzBM,SAASF,IAAoC,IAAfA,GAE1E,OADgBrD,EAASwD,QAAQ,MAAQ,GAAK1H,IAAkBwH,EAAU,IAAM,IAC9DpH,EAASkH,EAAcjH,GAG7CuD,EAAAlF,UAAAiJ,UAAA,SAAUzD,GACN,GAAItE,KAAK8F,cAA6B,KAAbxB,EACrB,OAAO,KAEX,IAAInG,GAASmG,GAAY,KAAKgD,QAAQtH,KAAKC,QAAQO,OAAQ,IAAI8G,QAAQtH,KAAKC,QAAQQ,OAAQ,IAc5F,OAZIT,KAAKC,QAAQS,YACbvC,EAAQA,EAAMmJ,QAAQ,IAAIU,OAAO,KAAOhI,KAAKC,QAAQS,UAAW,KAAM,KAGtEV,KAAKC,QAAQK,UACbnC,EAAQA,EAAMmJ,QAAQtH,KAAKC,QAAQK,QAAS,MAGhDN,KAAKsG,cAAc2B,QAAQ,SAACC,EAAazJ,GACrC,IAAM0J,EAAK,IAAIH,OAAOvJ,EAAK,KAC3BN,EAAQA,EAAMmJ,QAAQa,EAAID,KAEvBE,WAAWjK,IAGtB6F,EAAAlF,UAAAqG,iBAAA,WACQnF,KAAKC,QAAQG,eAAkC,IAAjBJ,KAAKsE,UAA6C,KAA3BtE,KAAKsE,SAAS+D,OAAO,IAA2B,GAAdrI,KAAK7B,QAC5F6B,KAAKsE,SAAW,IAAMtE,KAAKsE,WAInCN,EAAAlF,UAAAoG,iBAAA,WACIlF,KAAKsE,SAAWtE,KAAKsE,SAASgD,QAAQ,IAAK,KAG/CtD,EAAAlF,UAAAmG,aAAA,SAAaZ,GACT,GAAIrE,KAAK8F,cAA8B,GAAd9F,KAAK7B,MAC1B6B,KAAKsE,SAAW,SADpB,CAKA,IAAIM,EAAe5E,KAAK2E,eAAeC,aACnCe,EAAiB3F,KAAK2E,eAAegB,eAErCA,EAAiB3F,KAAKsE,SAASE,OAASxE,KAAKC,QAAQQ,OAAO+D,SAC5DI,EAAe5E,KAAKsE,SAASE,OAASxE,KAAKC,QAAQQ,OAAO+D,OAC1DmB,EAAiB3F,KAAKsE,SAASE,OAASxE,KAAKC,QAAQQ,OAAO+D,QAGpE,IAAI8D,EAAOtI,KAAKsE,SAASiE,OAAO5C,EAAiB,EAAG,GAAG6C,MAAM,MAAQ,GAAK,GAEzD,GAAXnE,GACAsB,EAAiB,GAAM,GACrB3F,KAAKsE,SAASiE,OAAO5C,EAAgB,GAAG6C,MAAM,SAGpC,IAAXnE,GAA4B,OAAXA,GACC,IAAnBsB,GACE3F,KAAKsE,SAASiE,OAAO5C,EAAiB,EAAG,GAAG6C,MAAM,SAGxDF,EAAO,GAET1D,EAA0B,IAAXP,GAA4B,OAAXA,EAAmBO,EAAe,EAAIA,EACtEe,EAA4B,GAAXtB,EAAesB,EAAiB,EAAIA,EACrD3F,KAAKsE,SAAWtE,KAAKsE,SAAS0C,UAAU,EAAGrB,GAAkB3F,KAAKsE,SAAS0C,UAAUpC,EAAc5E,KAAKsE,SAASE,QACjHxE,KAAKmE,iBAAiBwB,EAAiB2C,KAGvCtE,EAAAlF,UAAAqF,iBAAA,SAAiBwB,GACb,IAAI+B,EAAc1H,KAAK4G,WAAU,EAAO5G,KAAKsE,UAAY,IACzDqB,EAAmCK,MAAlBL,EAA8B3F,KAAKsE,SAASE,OAASmB,EACtE3F,KAAKwG,aAAaiC,qBAAqBf,EAAa1H,KAAKsE,SAASE,OAAQmB,IAG9E3B,EAAAlF,UAAAuC,cAAA,SAAcpB,GACV,IAAI9B,EAAgB6B,KAAK7B,MACzB6B,KAAKC,QAAUA,EACfD,KAAK7B,MAAQA,GAGjB6F,EAAAlF,UAAA8G,aAAA,WACI,OAAO5F,KAAKC,QAAQO,OAAOgE,QAG/BR,EAAAlF,UAAAgH,WAAA,WACI,OAAO9F,KAAKC,QAAQU,UAGxB/C,OAAAC,eAAImG,EAAAlF,UAAA,sBAAmB,KAAvB,WACI,OAAOkB,KAAKwG,aAAapB,qDAG7BxH,OAAAC,eAAImG,EAAAlF,UAAA,iBAAc,KAAlB,WACI,OAAOkB,KAAKwG,aAAa7B,gDAG7B/G,OAAAC,eAAImG,EAAAlF,UAAA,WAAQ,KAAZ,WACI,OAAOkB,KAAKwG,aAAalC,cAG7B,SAAanG,GACT6B,KAAKwG,aAAalC,SAAWnG,mCAGjCP,OAAAC,eAAImG,EAAAlF,UAAA,iBAAc,KAAlB,WACI,OAAOkB,KAAKwG,aAAa1B,gDAG7BlH,OAAAC,eAAImG,EAAAlF,UAAA,QAAK,KAAT,WACI,OAAOkB,KAAK+H,UAAU/H,KAAKsE,eAG/B,SAAUnG,GACN6B,KAAKsE,SAAWtE,KAAK4G,WAAU,EAAM,GAAKzI,oCAElD6F,EAlMA,GAAa1H,EAAA0H,8FCJb,IAAAyC,EAAA,WAII,SAAAA,EAAoB3C,GAAA9D,KAAA8D,mBAwFxB,OArFI2C,EAAA3H,UAAA4J,YAAA,SAAYC,GACR,GAAI3I,KAAK8D,iBAAiBsC,kBACtBpG,KAAK8D,iBAAiB8E,QACtB5I,KAAK8D,iBAAiBsC,kBAAkBuC,EAAUA,QAC/C,GAAI3I,KAAK8D,iBAAiB+E,gBAAiB,CAC9C,IAAIC,EAAY9I,KAAK8D,iBAAiB+E,kBACtCC,EAAUC,UAAS,GACnBD,EAAUE,QAAQ,YAAaL,GAC/BG,EAAUG,UAAU,YAAaN,GACjCG,EAAUI,WAIlBzC,EAAA3H,UAAA2J,qBAAA,SAAqBf,EAAqByB,EAAmBxD,GACzD3F,KAAKsE,SAAWoD,EAEhB/B,GAAmCwD,EADnBzB,EAAYlD,OAE5BxE,KAAK0I,YAAY/C,IAGrB/H,OAAAC,eAAI4I,EAAA3H,UAAA,sBAAmB,KAAvB,WACI,IAAIsK,IAA2BpJ,KAAKsE,SAASE,QAAUxE,KAAK8D,iBAAiBuF,WAAarJ,KAAK8D,iBAAiBuF,WAAa,GACzH1D,EAAiB3F,KAAK2E,eAAegB,eACrCf,EAAe5E,KAAK2E,eAAeC,aACnC0E,IAAwB3D,GAAkBf,IAClB5E,KAAK8D,iBAAiB3F,MAAM6I,UAAUrB,EAAgBf,GAAc4D,MAAM,qCAClGe,EAAgE,KAA/CvJ,KAAK8D,iBAAiB3F,MAAM6I,UAAU,EAAG,GAC9D,OAAOoC,GAA0BE,GAAsBC,mCAG3D3L,OAAAC,eAAI4I,EAAA3H,UAAA,iBAAc,KAAlB,WACI,IAAI6G,EAAiB,EACjBf,EAAe,EAEnB,GAAmD,iBAAxC5E,KAAK8D,iBAAiB6B,gBAA2E,iBAAtC3F,KAAK8D,iBAAiBc,aACxFe,EAAiB3F,KAAK8D,iBAAiB6B,eACvCf,EAAe5E,KAAK8D,iBAAiBc,iBAClC,CACH,IAAI4E,EAAcC,SAAUC,UAAUC,cAEtC,GAAIH,GAASA,EAAMI,iBAAmB5J,KAAK8D,iBAAkB,CACzD,IAAI+F,EAAS7J,KAAK8D,iBAAiB3F,MAAMqG,OACrCsF,EAAkB9J,KAAK8D,iBAAiB3F,MAAMmJ,QAAQ,QAAS,MAC/DyC,EAAa/J,KAAK8D,iBAAiB+E,kBACvCkB,EAAWC,eAAeR,EAAMS,eAChC,IAAIC,EAAWlK,KAAK8D,iBAAiB+E,kBACrCqB,EAASnB,UAAS,GAEdgB,EAAWI,iBAAiB,aAAcD,IAAa,EACvDvE,EAAiBf,EAAeiF,GAEhClE,GAAkBoE,EAAWd,UAAU,aAAcY,GACrDlE,GAAkBmE,EAAgBtC,MAAM,EAAG7B,GAAgByE,MAAM,MAAM5F,OAAS,EAE5EuF,EAAWI,iBAAiB,WAAYD,IAAa,EACrDtF,EAAeiF,GAEfjF,GAAgBmF,EAAWf,QAAQ,aAAca,GACjDjF,GAAgBkF,EAAgBtC,MAAM,EAAG5C,GAAcwF,MAAM,MAAM5F,OAAS,KAM5F,MAAO,CACHmB,eAAgBA,EAChBf,aAAcA,oCAItBhH,OAAAC,eAAI4I,EAAA3H,UAAA,WAAQ,KAAZ,WACI,OAAOkB,KAAK8D,kBAAoB9D,KAAK8D,iBAAiB3F,WAG1D,SAAaA,GACT6B,KAAKqK,gBAAkBlM,EAEnB6B,KAAK8D,mBACL9D,KAAK8D,iBAAiB3F,MAAQA,oCAItCP,OAAAC,eAAI4I,EAAA3H,UAAA,iBAAc,KAAlB,WACI,OAAOkB,KAAKqK,iDAEpB5D,EA5FA,GAAanK,EAAAmK,+bCAb,IAAAvH,EAAAlC,EAAA,GACAsN,EAAAtN,EAAA,GACAmC,EAAAnC,EAAA,GACAuN,EAAAvN,EAAA,GACAoC,EAAApC,EAAA,GAOAwN,EAAA,oBAAAA,WAUA,SAVaA,EACJA,EAAAC,QAAP,SAAeC,GACb,MAAO,CACLC,SAAUC,EACVxH,UAAW,CAAC,CACV7D,QAASH,EAAAoE,qBACTqH,SAAUH,MANLF,EAAiBI,EAAA7H,EAAA,CAL7B7D,EAAA4L,SAAS,CACRC,QAAS,CAAET,EAAAU,aAAc7L,EAAA8L,aACzBC,aAAc,CAAEX,EAAA5K,uBAChBrD,QAAS,CAAEiO,EAAA5K,0BAEA6K,GAAb,GAAalO,EAAAkO,mCCXbjO,EAAAD,QAAAQ","file":"ngx-currency.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngxBr\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ngxBr\"] = factory(root[\"ng\"][\"core\"], root[\"ng\"][\"forms\"], root[\"ng\"][\"common\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__9__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Input,\n  OnInit,\n  Optional\n} from \"@angular/core\";\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from \"./currency-mask.config\";\nimport {InputHandler} from \"./input.handler\";\n\nexport const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CurrencyMaskDirective),\n  multi: true,\n};\n\n@Directive({\n    selector: \"[currencyMask]\",\n    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\n})\nexport class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {\n\n  @Input() options: Partial<CurrencyMaskConfig> = {};\n\n  public inputHandler: InputHandler;\n  public keyValueDiffer: KeyValueDiffer<any, any>;\n\n  public optionsTemplate = {\n      align: \"right\",\n      allowNegative: true,\n      allowZero: true,\n      decimal: \".\",\n      precision: 2,\n      prefix: \"$ \",\n      suffix: \"\",\n      thousands: \",\",\n      nullable: false\n  };\n\n  constructor(@Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig,\n                                                        private elementRef: ElementRef,\n                                                        private keyValueDiffers: KeyValueDiffers) {\n    if (currencyMaskConfig) {\n        this.optionsTemplate = currencyMaskConfig;\n    }\n\n    this.keyValueDiffer = keyValueDiffers.find({}).create();\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.style.textAlign = this.options ? this.options.align : this.optionsTemplate.align;\n  }\n\n  ngDoCheck() {\n    if (this.keyValueDiffer.diff(this.options)) {\n      this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n      this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));\n    }\n  }\n\n  ngOnInit() {\n    this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));\n  }\n\n  @HostListener(\"blur\", [\"$event\"])\n  handleBlur(event: any) {\n    this.inputHandler.getOnModelTouched().apply(event);\n  }\n\n  @HostListener(\"cut\", [\"$event\"])\n  handleCut(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handleCut(event);\n    }\n  }\n\n  @HostListener(\"input\", [\"$event\"])\n  handleInput(event: any) {\n    if (this.isChromeAndroid()) {\n      this.inputHandler.handleInput(event);\n    }\n  }\n\n  @HostListener(\"keydown\", [\"$event\"])\n  handleKeydown(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handleKeydown(event);\n    }\n  }\n\n  @HostListener(\"keypress\", [\"$event\"])\n  handleKeypress(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handleKeypress(event);\n    }\n  }\n\n  @HostListener(\"paste\", [\"$event\"])\n  handlePaste(event: any) {\n    if (!this.isChromeAndroid()) {\n      this.inputHandler.handlePaste(event);\n    }\n  }\n\n  isChromeAndroid(): boolean {\n    return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n  }\n\n  registerOnChange(callbackFunction: Function): void {\n    this.inputHandler.setOnModelChange(callbackFunction);\n  }\n\n  registerOnTouched(callbackFunction: Function): void {\n    this.inputHandler.setOnModelTouched(callbackFunction);\n  }\n\n  setDisabledState(value: boolean): void {\n    this.elementRef.nativeElement.disabled = value;\n  }\n\n  writeValue(value: number): void {\n    this.inputHandler.setValue(value);\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import {InjectionToken} from \"@angular/core\";\n\nexport interface CurrencyMaskConfig {\n  align: string;\n  allowNegative: boolean;\n  allowZero: boolean;\n  decimal: string;\n  precision: number;\n  prefix: string;\n  suffix: string;\n  thousands: string;\n  nullable: boolean;\n}\n\nexport let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(\"currency.mask.config\");\n","export * from './src/currency-mask.directive';\nexport * from './src/currency-mask.module';\nexport { CurrencyMaskConfig } from './src/currency-mask.config';\n","import {InputService} from \"./input.service\";\n\nexport class InputHandler {\n\n    private inputService: InputService;\n    private onModelChange: Function;\n    private onModelTouched: Function;\n\n    constructor(htmlInputElement: HTMLInputElement, options: any) {\n        this.inputService = new InputService(htmlInputElement, options);\n    }\n\n    handleCut(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n\n    handleInput(event: any): void {\n        let keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);\n        let rawValueLength = this.inputService.rawValue.length;\n        let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n        this.inputService.rawValue = this.inputService.storedRawValue;\n\n        if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {\n            this.setCursorPosition(event);\n            return;\n        }\n\n        if (rawValueLength < storedRawValueLength) {\n            this.inputService.removeNumber(8);\n        }\n\n        if (rawValueLength > storedRawValueLength) {\n            switch (keyCode) {\n                case 43:\n                    this.inputService.changeToPositive();\n                    break;\n                case 45:\n                    this.inputService.changeToNegative();\n                    break;\n                default:\n                    if (!this.inputService.canInputMoreNumbers) {\n                        return;\n                    }\n\n                    this.inputService.addNumber(keyCode);\n            }\n        }\n\n        this.setCursorPosition(event);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeydown(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n            let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n            if (selectionRangeLength == 0) {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n\n            if (selectionRangeLength >= (this.inputService.rawValue.length - this.inputService.prefixLength())) {\n                this.clearValue();\n            }\n        }\n    }\n\n    clearValue() {\n        this.setValue(this.inputService.isNullable() ? null : 0);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeypress(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n\n        if (keyCode === 97 && event.ctrlKey) {\n            return;\n        }\n\n        switch (keyCode) {\n            case undefined:\n            case 9:\n            case 13:\n            case 37:\n            case 39:\n                return;\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers) {\n                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\n                        this.setValue(0);\n                    }\n\n                    this.inputService.addNumber(keyCode);\n                }\n        }\n\n        event.preventDefault();\n        this.onModelChange(this.inputService.value);\n    }\n\n    handlePaste(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n\n    updateOptions(options: any): void {\n        this.inputService.updateOptions(options);\n    }\n\n    getOnModelChange(): Function {\n        return this.onModelChange;\n    }\n\n    setOnModelChange(callbackFunction: Function): void {\n        this.onModelChange = callbackFunction;\n    }\n\n    getOnModelTouched(): Function {\n        return this.onModelTouched;\n    }\n\n    setOnModelTouched(callbackFunction: Function) {\n        this.onModelTouched = callbackFunction;\n    }\n\n    setValue(value: number): void {\n        this.inputService.value = value;\n    }\n\n    private setCursorPosition(event: any): void {\n        setTimeout(function () {\n            event.target.setSelectionRange(event.target.value.length, event.target.value.length);\n        }, 0);\n    }\n}\n","import {InputManager} from \"./input.manager\";\nimport {CurrencyMaskConfig} from \"./currency-mask.config\";\n\n\nexport class InputService {\n    PER_AR_NUMBER: Map<string, string> = new Map<string, string>();\n\n    initialize() {\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\n\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\n    }\n\n    inputManager: InputManager;\n\n    constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {\n        this.inputManager = new InputManager(htmlInputElement);\n        this.initialize()\n    }\n\n    addNumber(keyCode: number): void {\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, \"0\");\n        }\n\n        let keyChar = String.fromCharCode(keyCode);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\n        this.updateFieldValue(selectionStart + 1);\n    }\n\n    applyMask(isNumber: boolean, rawValue: string): string {\n        let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\n\n        if (!onlyNumbers) {\n            return \"\";\n        }\n\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\n          .replace(/^\\u0660*/g, \"\")\n          .replace(/^\\u06F0*/g, \"\")\n          .replace(/^0*/g, \"\")\n          .replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\n\n        if (thousands && integerPart.startsWith(thousands)) {\n            integerPart = integerPart.substring(1);\n        }\n\n\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n\n        if (precision > 0) {\n            newRawValue += decimal + decimalPart;\n        }\n\n        let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\n        let operator = (rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n\n    clearMask(rawValue: string): number {\n        if (this.isNullable() && rawValue === \"\")\n            return null;\n\n        let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n\n        this.PER_AR_NUMBER.forEach((val: string, key: string) => {\n            const re = new RegExp(key, \"g\");\n            value = value.replace(re, val);\n        });\n        return parseFloat(value);\n    }\n\n    changeToNegative(): void {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            this.rawValue = \"-\" + this.rawValue;\n        }\n    }\n\n    changeToPositive(): void {\n        this.rawValue = this.rawValue.replace(\"-\", \"\");\n    }\n\n    removeNumber(keyCode: number): void {\n        if (this.isNullable() && this.value == 0) {\n            this.rawValue = null;\n            return;\n        }\n\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\n            selectionStart = this.rawValue.length - this.options.suffix.length;\n        }\n\n    let move = this.rawValue.substr(selectionStart - 1, 1).match(/\\d/) ? 0 : -1;\n    if ((\n          keyCode == 8 &&\n          selectionStart - 1 === 0 &&\n          !(this.rawValue.substr(selectionStart, 1).match(/\\d/))\n        ) ||\n        (\n          (keyCode == 46 || keyCode == 63272) &&\n          selectionStart === 0 &&\n          !(this.rawValue.substr(selectionStart + 1, 1).match(/\\d/))\n        )\n    ) {\n      move = 1;\n    };\n    selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;\n    selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;\n    this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\n    this.updateFieldValue(selectionStart + move);\n  }\n\n    updateFieldValue(selectionStart?: number): void {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\");\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n\n    updateOptions(options: any): void {\n        let value: number = this.value;\n        this.options = options;\n        this.value = value;\n    }\n\n    prefixLength(): any {\n        return this.options.prefix.length;\n    }\n\n    isNullable() {\n        return this.options.nullable;\n    }\n\n    get canInputMoreNumbers(): boolean {\n        return this.inputManager.canInputMoreNumbers;\n    }\n\n    get inputSelection(): any {\n        return this.inputManager.inputSelection;\n    }\n\n    get rawValue(): string {\n        return this.inputManager.rawValue;\n    }\n\n    set rawValue(value: string) {\n        this.inputManager.rawValue = value;\n    }\n\n    get storedRawValue(): string {\n        return this.inputManager.storedRawValue;\n    }\n\n    get value(): number {\n        return this.clearMask(this.rawValue);\n    }\n\n    set value(value: number) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n}\n","export class InputManager {\n\n    private _storedRawValue: string;\n\n    constructor(private htmlInputElement: any) {\n    }\n\n    setCursorAt(position: number): void {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        } else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n\n    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n\n    get canInputMoreNumbers(): boolean {\n        let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = !!(selectionStart != selectionEnd &&\n                                    this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n\n    get inputSelection(): any {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        } else {\n            let range = (<any>document).selection.createRange();\n\n            if (range && range.parentElement() == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                } else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    } else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd\n        };\n    }\n\n    get rawValue(): string {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n\n    set rawValue(value: string) {\n        this._storedRawValue = value;\n\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n\n    get storedRawValue(): string {\n        return this._storedRawValue;\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CurrencyMaskDirective} from \"./currency-mask.directive\";\nimport {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from \"./currency-mask.config\";\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [ CurrencyMaskDirective ],\n  exports: [ CurrencyMaskDirective ]\n})\nexport class NgxCurrencyModule {\n  static forRoot(config: CurrencyMaskConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxCurrencyModule,\n      providers: [{\n        provide: CURRENCY_MASK_CONFIG,\n        useValue: config,\n      }]\n    }\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;"],"sourceRoot":""}